{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","authService","router","errors","userData","email","password","username","rememberMe","isLoggedIn","base64str","localStorage","getItem","undefined","credentials","atob","split","registerUser","subscribe","res","console","log","closeModals","openLogin","err","error","loginUser","setItem","token","navigate","setTimeout","document","getElementById","style","display","removeItem","type","alert","btoa","openSingup","loginClicked","signupClicked","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","loggedIn","providedIn","DashboardComponent","LoginComponent","modalService","signUpMessage","loginUserData","window","screen","width","openSignUpModal","AuthService","http","_registerUrl","_loginUrl","user","post","getToken","TokenInterceptorService","next","tokenizedRequest","clone","setHeaders","Authorization","handle","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthService } from './services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  public errors = [];\n\n  public userData = {\n    email: \"\",\n    password: \"\",\n    username: \"\",\n    rememberMe: false\n  }\n\n  public isLoggedIn : boolean = false;\n\n  constructor(private authService: AuthService,\n    private router: Router){\n    \n      let base64str = localStorage.getItem(\"credentials\");\n      if(base64str != undefined){\n        let credentials = atob(base64str).split(\":\");\n        this.userData.email = credentials[0];\n        this.userData.password = credentials[1];\n        this.userData.rememberMe = true;\n      }\n  }\n\n\n  public registerUser() {\n    this.authService.registerUser(this.userData)\n      .subscribe(\n        res => {\n          console.log(res);\n          this.closeModals();\n          this.openLogin();\n          this.errors = [];\n        },\n        err => this.errors = err.error\n      )\n  }\n\n  public loginUser(){\n    this.authService.loginUser(this.userData)\n      .subscribe(\n        res => {\n          console.log(res);\n          this.closeModals();\n          localStorage.setItem('token', res.token);\n          this.isLoggedIn = true;\n          this.errors = [];\n          this.router.navigate(['/dashboard']);\n        },\n        err => this.errors = [err.error] \n      )\n  }\n\n  openLogin() {\n    setTimeout(() => {\n      document.getElementById(\"login-modal\").style.display = \"block\";\n    }, 50);\n  }\n\n  openSingup() {\n\n    if(this.isLoggedIn){\n      this.isLoggedIn = false;\n      localStorage.removeItem('token');\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    setTimeout(() => {\n      document.getElementById(\"signup-modal\").style.display = \"block\";\n    }, 50);\n  }\n\n  closeModals() {\n    document.getElementById(\"signup-modal\").style.display = \"none\";\n    document.getElementById(\"login-modal\").style.display = \"none\";\n  }\n\n  loginClicked(type) {\n\n    if (type == \"facebook\") {\n      alert(\"not yet implemented!\");\n      return;\n    }\n\n    if (type == \"strava\") {\n      alert(\"not yet implemented!\");\n      return;\n    }\n\n    if (type == \"email\") {\n\n      if(this.userData.rememberMe){\n        let credentials = this.userData.email + \":\" + this.userData.password;\n        localStorage.setItem('credentials', btoa(credentials));\n      }\n\n      this.loginUser();\n      return;\n    }\n\n  }\n\n  signupClicked(type) {\n\n    if (type == \"facebook\") {\n      alert(\"not yet implemented!\");\n      return;\n    }\n\n    if (type == \"strava\") {\n      alert(\"not yet implemented!\");\n      return;\n    }\n\n    if (type == \"email\") {\n      this.registerUser();\n      return;\n    }\n  }\n\n   \n}\n","<Header (click)=\"closeModals()\">\n\n  <nav class=\"navbar navbar-expand-lg navbar-dark transparent-light top\">\n    <a class=\"navbar-brand\" href=\"#\">Asphalt Leader</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\"\n      aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n        </li>\n        <li class=\"nav-item\">\n        </li>\n      </ul>\n      <span class=\"navbar-text\" *ngIf=\"!isLoggedIn\">\n        <a class=\"nav-link\" (click)=\"openLogin()\">LOG IN <span class=\"sr-only\"></span></a>\n      </span>\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"openSingup()\">{{ isLoggedIn? \"log out\" : \"SIGN UP\"}}</button>\n    </div>\n  </nav>\n  \n</Header>\n\n<router-outlet (signUpEvent)=\"openSingup()\" ></router-outlet>\n\n\n\n  <div id=\"modal-container\">\n    <div id=\"login-modal\" class=\"auth-modal\">\n      <h2 class=\"mb-5\"> Log In </h2>\n\n      <button (click)=\"loginClicked('facebook')\" type=\"button\" class=\"btn btn-primary login-btn mt-4\">\n        <img src=\"../assets/logo-fb.jpg\">\n        &nbsp;&nbsp; Log in using Facebook\n      </button>\n\n      <button (click)=\"loginClicked('strava')\" type=\"button\" class=\"btn btn-warning login-btn mt-3\" id=\"strava-btn\">\n        <img src=\"../assets/logo-strava.jpg\">\n        &nbsp;&nbsp; Log in using Strava\n      </button>\n\n      <p class=\"m-5\">Or log in with email</p>\n\n      <div class=\"input-group flex-nowrap mt-2\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"addon-wrapping\">email</span>\n        </div>\n        <input [(ngModel)]=\"userData.email\" type=\"text\" class=\"form-control\" placeholder=\"yourEmail@yahoo.com\" aria-describedby=\"addon-wrapping\">\n      </div>\n\n      <div class=\"input-group flex-nowrap mt-3\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"addon-wrapping\">password</span>\n        </div>\n        <input [(ngModel)]=\"userData.password\" type=\"password\" class=\"form-control\" placeholder=\"password\" aria-describedby=\"addon-wrapping\">\n      </div>\n\n      <div style=\"float: left;\" class=\"mt-3\">\n        <input [(ngModel)]=\"userData.rememberMe\" type=\"checkbox\" name=\"remember-me\"> Remember me\n      </div> <br>\n\n      <button (click)=\"loginClicked('email')\" type=\"button\" \n          class=\"btn btn-light mt-4 login-btn\" style=\"color:black\">Log in</button>\n\n      <div class=\"mt-3 text-red\">\n          <em *ngFor=\"let error of errors\"> {{error}} </em>\n      </div>\n\n      <a href=\"\"> Forgot your password? </a>\n\n    </div>\n  </div>\n\n  <div id=\"signup-modal\" class=\"auth-modal\">\n\n\n    <h2 class=\"mb-5\"> Sing Up </h2>\n\n    <button (click)=\"signupClicked('facebook')\" type=\"button\" class=\"btn btn-primary login-btn mt-4\">\n      <img src=\"../assets/logo-fb.jpg\">\n      &nbsp;&nbsp; Sign up with Facebook\n    </button>\n\n    <button (click)=\"signupClicked('strava')\" type=\"button\" class=\"btn btn-warning login-btn mt-3\" id=\"strava-btn\">\n      <img src=\"../assets/logo-strava.jpg\">\n      &nbsp;&nbsp; Sign up with Strava\n    </button>\n\n    <p class=\"m-5\">Or sign up with your email address</p>\n\n\n    <div class=\"input-group flex-nowrap mt-1\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"addon-wrapping\">username</span>\n      </div>\n      <input [(ngModel)]=\"userData.username\" type=\"text\" class=\"form-control\" placeholder=\"yourUsername\" aria-describedby=\"addon-wrapping\">\n    </div>\n\n    <div class=\"input-group flex-nowrap mt-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"addon-wrapping\">email</span>\n      </div>\n      <input [(ngModel)]=\"userData.email\" type=\"text\" class=\"form-control\" placeholder=\"yourEmail@yahoo.com\" aria-describedby=\"addon-wrapping\">\n    </div>\n\n    <div class=\"input-group flex-nowrap mt-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"addon-wrapping\">password</span>\n      </div>\n      <input [(ngModel)]=\"userData.password\" type=\"password\" class=\"form-control\" placeholder=\"password\" aria-describedby=\"addon-wrapping\">\n    </div>\n\n    <button (click)=\"signupClicked('email')\" type=\"button\" \n        class=\"btn btn-light mt-5 mb-3 login-btn\" style=\"color:black\">Sign up</button>\n  \n    <div class=\"mt-3 text-red\">\n        <em *ngFor=\"let error of errors\"> * {{error}} <br></em>\n    </div>\n\n  </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HttpClientModule , HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'; \n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    NgbModule,\n    HttpClientModule\n  ],\n  providers: [ AuthService, AuthGuard, \n    { \n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n     } \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n \n   \n  constructor( private authService : AuthService,\n    private router : Router ){}\n  \n  \n  canActivate(){\n    if(this.authService.loggedIn()){\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core'; \n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  providers: [NgbModal]\n})\nexport class LoginComponent implements OnInit {\n  \n  signUpMessage = \"\";\n\n  public loginUserData = {\n    email:\"\",\n    password:\"\"\n  };\n \n  constructor(private modalService: NgbModal) {}\n  \n  ngOnInit(): void {\n    this.signUpMessage = window.screen.width < 800 ? \"SIGN UP\" : \"SIGN UP FOR FREE\";\n  }\n \n  public openSignUpModal(): void { \n    document.getElementById(\"signup-modal\").style.display=\"block\";\n  }\n\n  \n  \n\n\n}\n","<div id=\"container\">\n\n    <div id=\"center-text\">\n         <h1>\n           \"The will to win means nothing \n        </h1>   \n        <h2>\n            without the will to prepare.\" \n        </h2>\n        <h4><em> -- Juma Ikangaa </em></h4>\n    </div>\n\n\n    <div id=\"sign-up\">\n        <button type=\"button\" class=\"btn btn-info\" (click)=\"openSignUpModal()\"> {{signUpMessage}} </button>\n    </div>\n\n</div>","import { Injectable } from '@angular/core'; \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  // private _registerUrl = \"http://localhost:8080/auth/signup\";\n  private _registerUrl = \"/signup\";\n  // private _loginUrl = \"http://localhost:8080/auth/login\";\n  private _loginUrl = \"/login\";\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user){\n    return this.http.post<any>(this._registerUrl, user);\n  }\n\n  loginUser(user){\n    return this.http.post<any>(this._loginUrl, user);\n  }\n\n  loggedIn(){\n    return !!this.getToken();\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService {\n\n  constructor(private authService : AuthService) { }\n  \n  \n  intercept(req, next){\n    let tokenizedRequest = req.clone({\n      setHeaders: {\n        Authorization: 'Bearer ' + this.authService.getToken()\n      }\n    });\n    return next.handle(tokenizedRequest);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}