{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","openSignUpModal","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","next","state","providedIn","DashboardComponent","LoginComponent","signUpMessage","loginUserData","email","password","window","screen","width","AuthService","http","_registerUrl","_loginUrl","user","post","getToken","localStorage","getItem","TokenInterceptorService","authService","tokenizedRequest","clone","setHeaders","Authorization","handle","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    // canActivate: [AuthGuard]\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'asphalt-leader';\n\n  public openSignUpModal(): void { \n    // $('#exampleModalCenter').modal();\n  }\n  \n}\n","<Header>\n\n  <nav class=\"navbar navbar-expand-lg navbar-dark transparent-light top\">\n    <a class=\"navbar-brand\" href=\"#\">Asphalt Leader</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\"\n      aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <!-- <a class=\"nav-link\" routerLink=\"/home\">Home <span class=\"sr-only\">(current)</span></a> -->\n        </li>\n        <li class=\"nav-item\">\n          <!-- <a class=\"nav-link\" routerLink=\"/dashboard\">Dashboard</a> -->\n        </li>\n      </ul>\n      <span class=\"navbar-text\">\n        <a class=\"nav-link\" (click)=\"openSignUpModal()\">LOG IN <span class=\"sr-only\"></span></a>\n      </span>\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"openSignUpModal()\">SIGN UP</button>\n      <span class=\"navbar-text\">\n      </span>\n    </div>\n  </nav>\n</Header>\n\n<router-outlet></router-outlet>\n\n\n<Section>\n  <div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div id=\"login-modal\" class=\"modal-content\">\n        <!-- <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Modal title</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\" style=\"color:aliceblue\">&times;</span>\n          </button>\n        </div> -->\n        <div class=\"modal-body\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">Secondary</button> <br>\n          <button type=\"button\" class=\"btn btn-outline-info\" data-dismiss=\"modal\">Info</button><br>\n          <button type=\"button\" class=\"btn btn-outline-dark\" data-dismiss=\"modal\">Dark</button><br>\n        </div>\n      </div>\n    </div>\n  </div>\n</Section>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HttpClientModule , HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n  ],\n  providers: [ AuthService, AuthGuard, \n    { \n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n     } \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core'; \n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  \n  signUpMessage = \"\";\n\n\n  public loginUserData = {\n    email:\"\",\n    password:\"\"\n  };\n \n  constructor( ) {\n  }\n  \n  ngOnInit(): void {\n    this.signUpMessage = window.screen.width < 800 ? \"SIGN UP\" : \"SIGN UP FOR FREE\";\n  }\n \n  public openSignUpModal(): void { \n    // $('#exampleModalCenter').modal();\n  }\n\n\n}\n","<div id=\"container\">\n\n    <div id=\"center-text\">\n         <h1>\n           \"The will to win means nothing \n        </h1>   \n        <h2>\n            without the will to prepare.\" \n        </h2>\n        <h4><em> -- Juma Ikangaa </em></h4>\n    </div>\n\n\n    <div id=\"sign-up\">\n        <button type=\"button\" class=\"btn btn-info\" (click)=\"openSignUpModal()\"> {{signUpMessage}} </button>\n    </div>\n\n</div>","import { Injectable } from '@angular/core'; \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _registerUrl = \"...\";\n  private _loginUrl = \"...\";\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user){\n    return this.http.post<any>(this._registerUrl, user);\n  }\n\n  loginUser(user){\n    return this.http.post<any>(this._loginUrl, user);\n  }\n\n  loggedIn(){\n    return !!this.getToken();\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService {\n\n  constructor(private authService : AuthService) { }\n  \n  \n  intercept(req, next){\n    let tokenizedRequest = req.clone({\n      setHeaders: {\n        Authorization: 'Bearer ' + this.authService.getToken()\n      }\n    });\n    return next.handle(tokenizedRequest);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}