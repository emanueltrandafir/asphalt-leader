{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/auth.service.ts","./src/app/services/token-interceptor.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    // canActivate: [AuthGuard]\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  title = 'asphalt-leader';\n  showSingupModal :boolean = false;\n  showLoginModal :boolean = false;\n  \n  constructor(private modalService: NgbModal) { \n  }\n\n  // openLogin(content) {\n  openLogin() {\n    console.log(\"opening login\");\n    setTimeout(()=>{\n      this.showSingupModal = false;\n      this.showLoginModal = true;\n    },100);\n    // this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'});\n  }\n  \n  // openSingup(signup){\n  openSingup(){\n    console.log(\"opening signup\");\n    setTimeout(()=>{\n      this.showLoginModal = false;\n      this.showSingupModal = true;\n    },100);\n    // this.modalService.open(signup, {ariaLabelledBy: 'modal-basic-title'});\n  }\n  \n  closeModals(){\n    console.log(\"closing\");\n    this.showLoginModal = false;\n    this.showSingupModal = false;\n  }\n}\n","<Header (click)=\"closeModals()\">\n\n  <nav class=\"navbar navbar-expand-lg navbar-dark transparent-light top\">\n    <a class=\"navbar-brand\" href=\"#\">Asphalt Leader</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\"\n      aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n        </li>\n        <li class=\"nav-item\">\n        </li>\n      </ul>\n      <span class=\"navbar-text\">\n        <a class=\"nav-link\" (click)=\"openLogin()\">LOG IN <span class=\"sr-only\"></span></a>\n        <!-- <a class=\"nav-link\" (click)=\"openLogin(content)\">LOG IN <span class=\"sr-only\"></span></a> -->\n      </span>\n      <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"openSingup()\">SIGN UP</button>\n      <!-- <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"openSingup(signup)\">SIGN UP</button> -->\n      <span class=\"navbar-text\">\n      </span>\n    </div>\n  </nav>\n  \n</Header>\n\n<router-outlet></router-outlet>\n\n\n\n<div *ngIf=\"showLoginModal\">\n  <!-- <ng-template #content let-modal > -->\n  <div id=\"modal-container\">\n    <div id=\"auth-modal\">\n      <h2 class=\"mb-5\"> Log In </h2>\n\n      <button type=\"button\" class=\"btn btn-primary login-btn mt-4\">\n        <img src=\"../assets/logo-fb.jpg\">\n        &nbsp; Log in using Facebook\n      </button>\n\n      <button type=\"button\" class=\"btn btn-warning login-btn mt-3\" id=\"strava-btn\">\n        <img src=\"../assets/logo-strava.jpg\">\n        &nbsp; Log in using Strava\n      </button>\n\n      <p class=\"m-5\">Or log in with email</p>\n\n      <div class=\"input-group flex-nowrap mt-2\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"addon-wrapping\">email</span>\n        </div>\n        <input type=\"text\" class=\"form-control\" placeholder=\"yourEmail@yahoo.com\" aria-describedby=\"addon-wrapping\">\n      </div>\n\n      <div class=\"input-group flex-nowrap mt-3\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"addon-wrapping\">password</span>\n        </div>\n        <input type=\"password\" class=\"form-control\" placeholder=\"password\" aria-describedby=\"addon-wrapping\">\n      </div>\n\n      <div style=\"float: left;\" class=\"mt-3\">\n        <input type=\"checkbox\" name=\"remember-me\"> Remember me\n      </div> <br>\n\n      <button type=\"button\" class=\"btn btn-light mt-4 login-btn\" style=\"color:black\">Log in</button>\n\n      <br><br><a href=\"\"> Forgot your password? </a>\n\n    </div>\n  </div>\n  <!-- </ng-template> -->\n</div>\n\n<div *ngIf=\"showSingupModal\" (focusout)=\"closeModals()\">\n  <!-- <ng-template #signup let-modal > -->\n  <div id=\"auth-modal\">\n\n\n    <h2 class=\"mb-5\"> Sing Up </h2>\n\n    <button type=\"button\" class=\"btn btn-primary login-btn mt-4\">\n      <img src=\"../assets/logo-fb.jpg\">\n      &nbsp; Sign up with Facebook\n    </button>\n\n    <button type=\"button\" class=\"btn btn-warning login-btn mt-3\" id=\"strava-btn\">\n      <img src=\"../assets/logo-strava.jpg\">\n      &nbsp; Sign up with Strava\n    </button>\n\n    <p class=\"m-5\">Or sign up with your email address</p>\n\n\n    <div class=\"input-group flex-nowrap mt-1\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"addon-wrapping\">username</span>\n      </div>\n      <input type=\"text\" class=\"form-control\" placeholder=\"yourUsername\" aria-describedby=\"addon-wrapping\">\n    </div>\n\n    <div class=\"input-group flex-nowrap mt-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"addon-wrapping\">email</span>\n      </div>\n      <input type=\"text\" class=\"form-control\" placeholder=\"yourEmail@yahoo.com\" aria-describedby=\"addon-wrapping\">\n    </div>\n\n    <div class=\"input-group flex-nowrap mt-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"addon-wrapping\">password</span>\n      </div>\n      <input type=\"password\" class=\"form-control\" placeholder=\"password\" aria-describedby=\"addon-wrapping\">\n    </div>\n\n    <button type=\"button\" class=\"btn btn-light mt-5 mb-3 login-btn\" style=\"color:black\">Sign up</button>\n  </div>\n  <!-- </ng-template> -->\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HttpClientModule , HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'; \n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    NgbModule\n  ],\n  providers: [ AuthService, AuthGuard, \n    { \n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n     } \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core'; \n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  providers: [NgbModal]\n})\nexport class LoginComponent implements OnInit {\n  \n  signUpMessage = \"\";\n\n\n  public loginUserData = {\n    email:\"\",\n    password:\"\"\n  };\n \n  \n  constructor(private modalService: NgbModal) {}\n  \n  ngOnInit(): void {\n    this.signUpMessage = window.screen.width < 800 ? \"SIGN UP\" : \"SIGN UP FOR FREE\";\n  }\n \n  public openSignUpModal(): void { \n     \n  }\n\n  \n  \n\n\n}\n","<div id=\"container\">\n\n    <div id=\"center-text\">\n         <h1>\n           \"The will to win means nothing \n        </h1>   \n        <h2>\n            without the will to prepare.\" \n        </h2>\n        <h4><em> -- Juma Ikangaa </em></h4>\n    </div>\n\n\n    <div id=\"sign-up\">\n        <button type=\"button\" class=\"btn btn-info\" (click)=\"openSignUpModal()\"> {{signUpMessage}} </button>\n    </div>\n\n</div>","import { Injectable } from '@angular/core'; \nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _registerUrl = \"...\";\n  private _loginUrl = \"...\";\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user){\n    return this.http.post<any>(this._registerUrl, user);\n  }\n\n  loginUser(user){\n    return this.http.post<any>(this._loginUrl, user);\n  }\n\n  loggedIn(){\n    return !!this.getToken();\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService {\n\n  constructor(private authService : AuthService) { }\n  \n  \n  intercept(req, next){\n    let tokenizedRequest = req.clone({\n      setHeaders: {\n        Authorization: 'Bearer ' + this.authService.getToken()\n      }\n    });\n    return next.handle(tokenizedRequest);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}